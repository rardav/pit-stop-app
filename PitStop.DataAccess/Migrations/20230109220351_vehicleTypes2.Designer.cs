// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PitStop.DataAccess.Context;

#nullable disable

namespace PitStop.DataAccess.Migrations
{
    [DbContext(typeof(PitStopContext))]
    [Migration("20230109220351_vehicleTypes2")]
    partial class vehicleTypes2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PitStop.DataAccess.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("PitStop.DataAccess.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Cezin",
                            LastName = "Cupii"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Rares",
                            LastName = "David"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Vlad",
                            LastName = "Gont"
                        });
                });

            modelBuilder.Entity("PitStop.DataAccess.Entities.Fix", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfFixing")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("FixedPart")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Fixes");
                });

            modelBuilder.Entity("PitStop.DataAccess.Entities.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Vehicles");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Vehicle");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("PitStop.DataAccess.Entities.Bus", b =>
                {
                    b.HasBaseType("PitStop.DataAccess.Entities.Vehicle");

                    b.Property<int>("NoOfSeats")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Bus");
                });

            modelBuilder.Entity("PitStop.DataAccess.Entities.Car", b =>
                {
                    b.HasBaseType("PitStop.DataAccess.Entities.Vehicle");

                    b.Property<bool>("AutomaticGearbox")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("Car");
                });

            modelBuilder.Entity("PitStop.DataAccess.Entities.Truck", b =>
                {
                    b.HasBaseType("PitStop.DataAccess.Entities.Vehicle");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.HasDiscriminator().HasValue("Truck");
                });

            modelBuilder.Entity("PitStop.DataAccess.Entities.Fix", b =>
                {
                    b.HasOne("PitStop.DataAccess.Entities.Employee", "Employee")
                        .WithMany("Fixes")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PitStop.DataAccess.Entities.Vehicle", "Vehicle")
                        .WithMany("Fixes")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("PitStop.DataAccess.Entities.Vehicle", b =>
                {
                    b.HasOne("PitStop.DataAccess.Entities.Client", "Client")
                        .WithMany("Vehicles")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("PitStop.DataAccess.Entities.Client", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("PitStop.DataAccess.Entities.Employee", b =>
                {
                    b.Navigation("Fixes");
                });

            modelBuilder.Entity("PitStop.DataAccess.Entities.Vehicle", b =>
                {
                    b.Navigation("Fixes");
                });
#pragma warning restore 612, 618
        }
    }
}
